# Generated by Django 5.2.6 on 2025-09-06 21:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rarity', models.CharField(choices=[('worn_out', 'Worn-Out'), ('standard_issue', 'Standard Issue'), ('pro_grade', 'Pro-Grade'), ('signature_series', 'Signature Series'), ('mythic_flex', 'Mythic Flex')], max_length=20)),
                ('slot', models.CharField(choices=[('head', 'Head'), ('torso', 'Torso'), ('arms', 'Arms'), ('legs', 'Legs'), ('feet', 'Feet')], max_length=10)),
                ('str_bonus', models.IntegerField(default=0)),
                ('end_bonus', models.IntegerField(default=0)),
                ('fcs_bonus', models.IntegerField(default=0)),
                ('rcv_bonus', models.IntegerField(default=0)),
                ('lck_bonus', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.CharField(blank=True, max_length=255)),
                ('gym_gems', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cardio_coins', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('str_stat', models.IntegerField(default=0)),
                ('end_stat', models.IntegerField(default=0)),
                ('fcs_stat', models.IntegerField(default=0)),
                ('rcv_stat', models.IntegerField(default=0)),
                ('lck_stat', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=1)),
                ('xp', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='profile_groups', related_query_name='profile', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='profile_users', related_query_name='profile', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('lift', 'Weight Lifting'), ('cardio', 'Cardio')], max_length=10)),
                ('lift_type', models.CharField(blank=True, choices=[('squat', 'Squat'), ('deadlift', 'Deadlift'), ('bench', 'Bench Press'), ('curl', 'Curl')], max_length=20)),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('reps', models.IntegerField(default=0)),
                ('calories', models.IntegerField(default=0)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('volume', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
        ),
    ]
