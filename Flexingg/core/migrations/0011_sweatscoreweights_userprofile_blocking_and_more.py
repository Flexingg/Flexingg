# Generated by Django 5.2.6 on 2025-09-12 13:44

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0010_userprofile_sync_debounce_minutes'),
    ]

    operations = [
        migrations.CreateModel(
            name='SweatScoreWeights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.IntegerField(choices=[(0, 'Zone 0 - Below Zone 1'), (1, 'Zone 1 - Very Light'), (2, 'Zone 2 - Light'), (3, 'Zone 3 - Moderate'), (4, 'Zone 4 - Hard'), (5, 'Zone 5 - Maximum')], help_text='Heart rate zone number', unique=True)),
                ('name', models.CharField(help_text='Descriptive name for the zone', max_length=100)),
                ('perceived_effort', models.CharField(help_text='Perceived effort description', max_length=100)),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, help_text='Points per minute for this zone', max_digits=5)),
            ],
            options={
                'verbose_name': 'Sweat Score Weight',
                'verbose_name_plural': 'Sweat Score Weights',
                'ordering': ['zone'],
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='blocking',
            field=models.ManyToManyField(blank=True, related_name='blockers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='following',
            field=models.ManyToManyField(blank=True, related_name='followers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ColorPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surface', models.CharField(default='#121212', help_text='Surface color', max_length=7)),
                ('on_surface', models.CharField(default='#FFFFFF', help_text='On surface color', max_length=7)),
                ('primary', models.CharField(default='#00f5d4', help_text='Primary color', max_length=7)),
                ('on_primary', models.CharField(default='#000000', help_text='On primary color', max_length=7)),
                ('secondary', models.CharField(default='#2a2a2a', help_text='Secondary color', max_length=7)),
                ('on_secondary', models.CharField(default='#FFFFFF', help_text='On secondary color', max_length=7)),
                ('tertiary', models.CharField(default='#333333', help_text='Tertiary color', max_length=7)),
                ('on_tertiary', models.CharField(default='#FFFFFF', help_text='On tertiary color', max_length=7)),
                ('surface_variant', models.CharField(default='#1f1f1f', help_text='Surface variant color', max_length=7)),
                ('on_surface_variant', models.CharField(default='#BDBDBD', help_text='On surface variant color', max_length=7)),
                ('outline', models.CharField(default='#424242', help_text='Outline color', max_length=7)),
                ('error', models.CharField(default='#F44336', help_text='Error color', max_length=7)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='theme_colors', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for this friendship.', primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('blocked', 'Blocked')], default='pending', help_text='Status of this friendship request.', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when the friendship request was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when the friendship status was last updated.')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendship_requests_sent', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendship_requests_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('from_user', 'to_user')},
            },
        ),
        migrations.DeleteModel(
            name='Workout',
        ),
    ]
