# Generated by Django 5.2.6 on 2025-09-06 23:09

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Garmin_Auth',
            fields=[
                ('oauth_token', models.CharField(max_length=10000, primary_key=True, serialize=False)),
                ('oauth_token_secret', models.CharField(max_length=10000)),
                ('mfa_token', models.CharField(blank=True, max_length=10000, null=True)),
                ('mfa_expiration_timestamp', models.DateTimeField(blank=True, null=True)),
                ('domain', models.CharField(max_length=10000)),
                ('scope', models.CharField(max_length=10000)),
                ('jti', models.CharField(max_length=10000)),
                ('token_type', models.CharField(max_length=10000)),
                ('access_token', models.CharField(max_length=10000)),
                ('refresh_token', models.CharField(max_length=10000)),
                ('expires_in', models.IntegerField(blank=True, null=True)),
                ('expires_at', models.IntegerField(blank=True, null=True)),
                ('refresh_token_expires_in', models.IntegerField(blank=True, default=10000, null=True)),
                ('refresh_token_expires_at', models.IntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, help_text='Timestamp of the last successful data sync.', null=True)),
                ('last_sync_attempt', models.DateTimeField(blank=True, help_text='Timestamp of the last sync attempt (successful or failed).', null=True)),
                ('garmin_email', models.EmailField(blank=True, help_text='Garmin Connect email address used for linking.', max_length=254, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserColorPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_mode', models.CharField(default='default_dark', max_length=20)),
                ('surface_hue', models.IntegerField(default=0)),
                ('surface_saturation', models.IntegerField(default=0)),
                ('surface_lightness', models.IntegerField(default=7)),
                ('on_surface_hue', models.IntegerField(default=0)),
                ('on_surface_saturation', models.IntegerField(default=0)),
                ('on_surface_lightness', models.IntegerField(default=88)),
                ('primary_hue', models.IntegerField(default=175)),
                ('primary_saturation', models.IntegerField(default=100)),
                ('primary_lightness', models.IntegerField(default=50)),
                ('on_primary_hue', models.IntegerField(default=0)),
                ('on_primary_saturation', models.IntegerField(default=0)),
                ('on_primary_lightness', models.IntegerField(default=0)),
                ('secondary_hue', models.IntegerField(default=48)),
                ('secondary_saturation', models.IntegerField(default=100)),
                ('secondary_lightness', models.IntegerField(default=50)),
                ('on_secondary_hue', models.IntegerField(default=0)),
                ('on_secondary_saturation', models.IntegerField(default=0)),
                ('on_secondary_lightness', models.IntegerField(default=0)),
                ('tertiary_hue', models.IntegerField(default=195)),
                ('tertiary_saturation', models.IntegerField(default=100)),
                ('tertiary_lightness', models.IntegerField(default=50)),
                ('on_tertiary_hue', models.IntegerField(default=0)),
                ('on_tertiary_saturation', models.IntegerField(default=0)),
                ('on_tertiary_lightness', models.IntegerField(default=0)),
                ('surface_variant_hue', models.IntegerField(default=0)),
                ('surface_variant_saturation', models.IntegerField(default=0)),
                ('surface_variant_lightness', models.IntegerField(default=16)),
                ('on_surface_variant_hue', models.IntegerField(default=0)),
                ('on_surface_variant_saturation', models.IntegerField(default=0)),
                ('on_surface_variant_lightness', models.IntegerField(default=74)),
                ('outline_hue', models.IntegerField(default=0)),
                ('outline_saturation', models.IntegerField(default=0)),
                ('outline_lightness', models.IntegerField(default=38)),
                ('error_hue', models.IntegerField(default=0)),
                ('error_saturation', models.IntegerField(default=100)),
                ('error_lightness', models.IntegerField(default=59)),
                ('is_dark_theme', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='color_preferences', to='core.userprofile')),
            ],
            options={
                'verbose_name': 'User Color Preference',
                'verbose_name_plural': 'User Color Preferences',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('activity_type', models.CharField(max_length=100)),
                ('start_time_utc', models.DateTimeField()),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('calories', models.FloatField(blank=True, null=True)),
                ('steps', models.IntegerField(blank=True, null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='core.userprofile')),
            ],
            options={
                'unique_together': {('user', 'start_time_utc')},
            },
        ),
        migrations.CreateModel(
            name='DailyStep',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('calendar_date', models.DateField()),
                ('total_steps', models.IntegerField(default=0)),
                ('total_distance', models.FloatField(default=0)),
                ('step_goal', models.IntegerField(default=10000)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_steps', to='core.userprofile')),
            ],
            options={
                'unique_together': {('user', 'calendar_date')},
            },
        ),
    ]
